# Media Management Service Configuration
# Copy this file to .env.local for local development
# See README.md for more information about run modes and environment setup
#
# API Base URL: http://localhost:3000/api/v1/media-management

# Runtime Mode Configuration
RUN_MODE=local                       # local (default) | production

# Server Configuration
MEDIA_SERVICE_SERVER_HOST=0.0.0.0
MEDIA_SERVICE_SERVER_PORT=3000
MEDIA_SERVICE_SERVER_MAX_UPLOAD_SIZE=104857600  # 100MB

# Database Configuration
# PostgreSQL connection parameters
POSTGRES_HOST=localhost              # Database server hostname
POSTGRES_PORT=5432                   # Database server port
POSTGRES_DB=recipe_database          # Database name
POSTGRES_SCHEMA=recipe_manager       # Schema name for tables
MEDIA_MANAGEMENT_DB_USER=postgres    # Database username
MEDIA_MANAGEMENT_DB_PASSWORD=your_password_here  # Database password

# Database Connection Pool Settings
POSTGRES_MAX_CONNECTIONS=10          # Maximum concurrent database connections
POSTGRES_MIN_CONNECTIONS=1           # Minimum idle connections in pool
POSTGRES_ACQUIRE_TIMEOUT_SECONDS=30  # Timeout for acquiring connections

# Storage Configuration (Local Development)
MEDIA_SERVICE_STORAGE_BASE_PATH=./media      # Base directory for media files
MEDIA_SERVICE_STORAGE_TEMP_PATH=./media/temp # Temporary upload directory
MEDIA_SERVICE_STORAGE_MAX_FILE_SIZE=524288000  # Max file size: 500MB

# Logging Configuration (Local Development)
MEDIA_SERVICE_LOGGING_LEVEL=debug    # Logging level: trace, debug, info, warn, error
MEDIA_SERVICE_LOGGING_FILTER=""      # Custom filter override (optional)

# Console Logging
MEDIA_SERVICE_LOGGING_CONSOLE_ENABLED=true      # Enable console output
MEDIA_SERVICE_LOGGING_CONSOLE_FORMAT=pretty     # Format: pretty, json, compact

# File Logging
MEDIA_SERVICE_LOGGING_FILE_ENABLED=true         # Enable file logging
MEDIA_SERVICE_LOGGING_FILE_FORMAT=json          # Format: json (recommended), pretty, compact
MEDIA_SERVICE_LOGGING_FILE_PATH=./logs          # Log directory path
MEDIA_SERVICE_LOGGING_FILE_PREFIX=media-service # Log file prefix
MEDIA_SERVICE_LOGGING_FILE_ROTATION=daily       # Rotation: daily, hourly, never
MEDIA_SERVICE_LOGGING_FILE_RETENTION_DAYS=10    # Days to keep old log files
MEDIA_SERVICE_LOGGING_FILE_MAX_SIZE_MB=""        # Size-based rotation (optional)

# Performance Settings
MEDIA_SERVICE_LOGGING_NON_BLOCKING=true         # Use non-blocking file writes
MEDIA_SERVICE_LOGGING_BUFFER_SIZE=8192          # Buffer size for non-blocking writes

# =============================================================================
# MIDDLEWARE CONFIGURATION
# =============================================================================

# Authentication Middleware
MEDIA_SERVICE_MIDDLEWARE_AUTH_ENABLED=true                    # Enable JWT authentication
MEDIA_SERVICE_MIDDLEWARE_AUTH_JWT_SECRET=change-me-in-production  # JWT signing secret (CHANGE IN PRODUCTION!)
MEDIA_SERVICE_MIDDLEWARE_AUTH_JWT_EXPIRY_HOURS=24            # JWT token expiration time in hours
MEDIA_SERVICE_MIDDLEWARE_AUTH_REQUIRE_AUTH_ROUTES=""         # Comma-separated routes requiring auth
MEDIA_SERVICE_MIDDLEWARE_AUTH_OPTIONAL_AUTH_ROUTES=""        # Comma-separated routes with optional auth

# Rate Limiting Middleware
MEDIA_SERVICE_MIDDLEWARE_RATE_LIMITING_ENABLED=true          # Enable rate limiting
MEDIA_SERVICE_MIDDLEWARE_RATE_LIMITING_DEFAULT_REQUESTS_PER_MINUTE=100    # Default requests per minute
MEDIA_SERVICE_MIDDLEWARE_RATE_LIMITING_DEFAULT_BURST_CAPACITY=10          # Burst capacity above rate limit
MEDIA_SERVICE_MIDDLEWARE_RATE_LIMITING_TRUST_FORWARDED_HEADERS=false      # Trust X-Forwarded-For headers
MEDIA_SERVICE_MIDDLEWARE_RATE_LIMITING_INCLUDE_RATE_LIMIT_HEADERS=true    # Include rate limit info in response headers

# Rate Limiting Tiers (requests per minute for different endpoint types)
MEDIA_SERVICE_MIDDLEWARE_RATE_LIMITING_TIERS_HEALTH_REQUESTS_PER_MINUTE=1000        # Health check endpoints
MEDIA_SERVICE_MIDDLEWARE_RATE_LIMITING_TIERS_PUBLIC_REQUESTS_PER_MINUTE=60          # Public endpoints
MEDIA_SERVICE_MIDDLEWARE_RATE_LIMITING_TIERS_AUTHENTICATED_REQUESTS_PER_MINUTE=200  # Authenticated endpoints
MEDIA_SERVICE_MIDDLEWARE_RATE_LIMITING_TIERS_UPLOAD_REQUESTS_PER_MINUTE=10          # File upload endpoints
MEDIA_SERVICE_MIDDLEWARE_RATE_LIMITING_TIERS_ADMIN_REQUESTS_PER_MINUTE=500          # Admin endpoints

# Security Headers Middleware
MEDIA_SERVICE_MIDDLEWARE_SECURITY_ENABLED=true               # Enable security headers
MEDIA_SERVICE_MIDDLEWARE_SECURITY_HSTS_ENABLED=false         # Enable HSTS (set true for HTTPS in production)
MEDIA_SERVICE_MIDDLEWARE_SECURITY_HSTS_MAX_AGE_SECONDS=31536000  # HSTS max age (1 year)
MEDIA_SERVICE_MIDDLEWARE_SECURITY_HSTS_INCLUDE_SUBDOMAINS=true   # Include subdomains in HSTS
MEDIA_SERVICE_MIDDLEWARE_SECURITY_HSTS_PRELOAD=false            # HSTS preload directive
MEDIA_SERVICE_MIDDLEWARE_SECURITY_CSP_POLICY="default-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self'; connect-src 'self'; media-src 'self'; object-src 'none'; frame-ancestors 'none'; form-action 'self'; base-uri 'self'"  # Content Security Policy
MEDIA_SERVICE_MIDDLEWARE_SECURITY_FRAME_OPTIONS=DENY          # X-Frame-Options: DENY, SAMEORIGIN, or ALLOW-FROM uri
MEDIA_SERVICE_MIDDLEWARE_SECURITY_CONTENT_TYPE_OPTIONS=true   # X-Content-Type-Options: nosniff
MEDIA_SERVICE_MIDDLEWARE_SECURITY_XSS_PROTECTION="1; mode=block"  # X-XSS-Protection header
MEDIA_SERVICE_MIDDLEWARE_SECURITY_REFERRER_POLICY=strict-origin-when-cross-origin  # Referrer-Policy header
MEDIA_SERVICE_MIDDLEWARE_SECURITY_PERMISSIONS_POLICY="accelerometer=(), camera=(), geolocation=(), gyroscope=(), magnetometer=(), microphone=(), payment=(), usb=()"  # Permissions-Policy header

# Metrics Collection Middleware
MEDIA_SERVICE_MIDDLEWARE_METRICS_ENABLED=true               # Enable metrics collection
MEDIA_SERVICE_MIDDLEWARE_METRICS_ENDPOINT_ENABLED=true      # Enable /metrics endpoint for Prometheus
MEDIA_SERVICE_MIDDLEWARE_METRICS_ENDPOINT_PATH=/metrics     # Metrics endpoint path
MEDIA_SERVICE_MIDDLEWARE_METRICS_PROMETHEUS_PORT=9090       # Prometheus metrics server port
MEDIA_SERVICE_MIDDLEWARE_METRICS_COLLECT_REQUEST_METRICS=true     # Collect HTTP request metrics
MEDIA_SERVICE_MIDDLEWARE_METRICS_COLLECT_TIMING_METRICS=true      # Collect request timing metrics
MEDIA_SERVICE_MIDDLEWARE_METRICS_COLLECT_ERROR_METRICS=true       # Collect error metrics
MEDIA_SERVICE_MIDDLEWARE_METRICS_COLLECT_BUSINESS_METRICS=true    # Collect business logic metrics
MEDIA_SERVICE_MIDDLEWARE_METRICS_NORMALIZE_ROUTES=true            # Normalize route paths for consistent metrics
MEDIA_SERVICE_MIDDLEWARE_METRICS_COLLECTION_INTERVAL_SECONDS=10   # Background metrics collection interval

# Request Validation Middleware
MEDIA_SERVICE_MIDDLEWARE_VALIDATION_ENABLED=true            # Enable request validation
MEDIA_SERVICE_MIDDLEWARE_VALIDATION_VALIDATE_CONTENT_TYPE=true    # Validate Content-Type headers
MEDIA_SERVICE_MIDDLEWARE_VALIDATION_VALIDATE_BODY_SIZE=true       # Validate request body size
MEDIA_SERVICE_MIDDLEWARE_VALIDATION_MAX_BODY_SIZE_MB=100          # Maximum request body size in MB
MEDIA_SERVICE_MIDDLEWARE_VALIDATION_VALIDATE_JSON_STRUCTURE=true  # Validate JSON structure for JSON requests
MEDIA_SERVICE_MIDDLEWARE_VALIDATION_VALIDATE_FILE_UPLOADS=true    # Validate file uploads
MEDIA_SERVICE_MIDDLEWARE_VALIDATION_MAX_FILE_SIZE_MB=50           # Maximum file upload size in MB
MEDIA_SERVICE_MIDDLEWARE_VALIDATION_ALLOWED_FILE_TYPES="image/jpeg,image/png,image/webp,image/avif,video/mp4,video/webm"  # Comma-separated allowed file types
MEDIA_SERVICE_MIDDLEWARE_VALIDATION_VALIDATE_HEADERS=true         # Validate required headers
MEDIA_SERVICE_MIDDLEWARE_VALIDATION_VALIDATE_METHODS=true         # Validate HTTP methods for routes

# Request/Response Logging Middleware
MEDIA_SERVICE_MIDDLEWARE_REQUEST_LOGGING_ENABLED=true       # Enable detailed HTTP request/response logging
MEDIA_SERVICE_MIDDLEWARE_REQUEST_LOGGING_LOG_REQUEST_BODY=false   # Log request bodies (be careful with sensitive data)
MEDIA_SERVICE_MIDDLEWARE_REQUEST_LOGGING_LOG_RESPONSE_BODY=false  # Log response bodies (be careful with sensitive data)
MEDIA_SERVICE_MIDDLEWARE_REQUEST_LOGGING_MAX_BODY_SIZE_KB=10      # Maximum body size to log in KB
MEDIA_SERVICE_MIDDLEWARE_REQUEST_LOGGING_LOG_REQUEST_HEADERS=true  # Log request headers
MEDIA_SERVICE_MIDDLEWARE_REQUEST_LOGGING_LOG_RESPONSE_HEADERS=false  # Log response headers
MEDIA_SERVICE_MIDDLEWARE_REQUEST_LOGGING_EXCLUDED_HEADERS="authorization,cookie,set-cookie,x-api-key,x-auth-token"  # Comma-separated headers to exclude from logs
MEDIA_SERVICE_MIDDLEWARE_REQUEST_LOGGING_LOG_TIMING=true          # Log request timing information
MEDIA_SERVICE_MIDDLEWARE_REQUEST_LOGGING_SLOW_REQUEST_THRESHOLD_MS=1000  # Threshold for logging slow requests (milliseconds)

# =============================================================================
# PRODUCTION OVERRIDES
# =============================================================================
# When RUN_MODE=production, these settings are automatically applied:
#
# Security:
# - HSTS enabled for HTTPS enforcement
# - Stricter CSP policy
# - Request/response body logging disabled
# - More restrictive validation limits
#
# Performance:
# - Higher slow request threshold (2000ms)
# - Smaller body size limits for logging
#
# Storage:
# - Absolute container paths (/app/media, /app/media/temp)
# - Production-optimized file size limits

# =============================================================================
# QUICK SETUP GUIDE
# =============================================================================
# 1. Copy this file: cp .env.example .env.local
# 2. Update the database password: MEDIA_MANAGEMENT_DB_PASSWORD=your_actual_password
# 3. Update the JWT secret: MEDIA_SERVICE_MIDDLEWARE_AUTH_JWT_SECRET=your_secure_secret_here
# 4. Run the service: cargo run
#
# The service will be available at: http://localhost:3000/api/v1/media-management/
# Health check: http://localhost:3000/api/v1/media-management/health
# Metrics (if enabled): http://localhost:3000/metrics
