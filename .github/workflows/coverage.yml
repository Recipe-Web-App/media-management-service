---
name: Code Coverage

on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read
  pull-requests: write

env:
  RUST_VERSION: "stable"
  COVERAGE_THRESHOLD: 80

jobs:
  coverage:
    name: Check Code Coverage
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: ${{ env.RUST_VERSION }}
          components: llvm-tools-preview

      - name: Cache Cargo registry and index
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Install cargo-llvm-cov
        run: cargo install cargo-llvm-cov

      - name: Run tests with coverage
        run: cargo llvm-cov --workspace --lcov --output-path lcov.info

      - name: Calculate coverage percentage
        id: coverage
        run: |
          COVERAGE=$(cargo llvm-cov --workspace 2>&1 | grep -oP 'TOTAL.*\K\d+\.\d+' | head -1)
          echo "percentage=$COVERAGE" >> $GITHUB_OUTPUT
          echo "Coverage: $COVERAGE%"

      - name: Check coverage threshold
        run: |
          COVERAGE=${{ steps.coverage.outputs.percentage }}
          THRESHOLD=${{ env.COVERAGE_THRESHOLD }}

          if (( $(echo "$COVERAGE < $THRESHOLD" | bc -l) )); then
            echo "‚ùå Coverage $COVERAGE% is below threshold $THRESHOLD%"
            exit 1
          else
            echo "‚úÖ Coverage $COVERAGE% meets threshold $THRESHOLD%"
          fi

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          files: lcov.info
          flags: unittests
          name: codecov-umbrella
          fail_ci_if_error: false

      - name: Comment PR with coverage
        if: github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: coverage
          message: |
            ## üìä Code Coverage Report

            **Coverage:** ${{ steps.coverage.outputs.percentage }}%
            **Threshold:** ${{ env.COVERAGE_THRESHOLD }}%
            **Status:** ${{ steps.coverage.outputs.percentage >= env.COVERAGE_THRESHOLD && '‚úÖ Passed' || '‚ùå Failed' }}

            Coverage is enforced at **80% minimum** via pre-commit hooks and CI.
